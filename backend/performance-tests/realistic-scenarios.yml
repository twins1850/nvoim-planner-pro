config:
  target: "{{ $processEnvironment.TARGET_URL || 'http://localhost:3000' }}"
  phases:
    - duration: 60
      arrivalRate: 5
      name: "Warm up phase"
    - duration: 120
      arrivalRate: 10
      rampTo: 30
      name: "Ramp up load"
    - duration: 300
      arrivalRate: 30
      name: "Sustained load"
    - duration: 60
      arrivalRate: 50
      name: "Peak load"
    - duration: 60
      arrivalRate: 10
      name: "Ramp down"
  defaults:
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
  environments:
    development:
      target: "http://localhost:3000"
      phases:
        - duration: 30
          arrivalRate: 2
          name: "Development testing"
    staging:
      target: "https://staging-api.example.com"
  plugins:
    metrics-by-endpoint: {}
    expect: {}
    apdex:
      threshold: 100
    ensure:
      thresholds:
        - http.response_time.p95: 500
        - http.response_time.p99: 1000
        - errors: 1

scenarios:
  # Scenario 1: Planner uploads and analyzes lessons
  - name: "Planner lesson upload and analysis workflow"
    weight: 20
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "{{ $processEnvironment.TEST_PLANNER_EMAIL || 'test-planner@example.com' }}"
            password: "{{ $processEnvironment.TEST_PLANNER_PASSWORD || 'password123' }}"
          capture:
            - json: "$.data.token"
              as: "authToken"
          expect:
            - statusCode: 200
      
      - get:
          url: "/api/students"
          headers:
            Authorization: "Bearer {{ authToken }}"
          capture:
            - json: "$.data[0].id"
              as: "studentId"
              strict: false
          expect:
            - statusCode: 200
      
      - think: 3
      
      # Simulate file upload (this is a mock since Artillery doesn't support file uploads well)
      - post:
          url: "/api/files/mock-upload"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            studentId: "{{ studentId }}"
            lessonDate: "{{ $timestamp }}"
          capture:
            - json: "$.data.fileId"
              as: "fileId"
          expect:
            - statusCode: 200
      
      - think: 2
      
      - post:
          url: "/api/lessons"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            studentId: "{{ studentId }}"
            audioFileId: "{{ fileId }}"
            lessonDate: "{{ $timestamp }}"
          capture:
            - json: "$.data.id"
              as: "lessonId"
          expect:
            - statusCode: 201
      
      - think: 2
      
      - post:
          url: "/api/lessons/{{ lessonId }}/analyze"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
      
      - think: 5
      
      - get:
          url: "/api/lessons/{{ lessonId }}"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
            - contentType: json
            - hasProperty: data.analysisResult

  # Scenario 2: Planner creates and assigns homework
  - name: "Planner homework creation workflow"
    weight: 15
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "{{ $processEnvironment.TEST_PLANNER_EMAIL || 'test-planner@example.com' }}"
            password: "{{ $processEnvironment.TEST_PLANNER_PASSWORD || 'password123' }}"
          capture:
            - json: "$.data.token"
              as: "authToken"
          expect:
            - statusCode: 200
      
      - get:
          url: "/api/students"
          headers:
            Authorization: "Bearer {{ authToken }}"
          capture:
            - json: "$.data[*].id"
              as: "studentIds"
          expect:
            - statusCode: 200
      
      - think: 3
      
      - post:
          url: "/api/homework"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            title: "Practice homework {{ $randomString(10) }}"
            description: "Please complete these exercises"
            type: "mixed"
            content:
              instructions: "Follow the instructions carefully"
              questions:
                - type: "audio_recording"
                  question: "Record yourself reading this passage"
                - type: "text_input"
                  question: "Write a short paragraph about your day"
            studentIds: "{{ studentIds }}"
            dueDate: "{{ $processEnvironment.FUTURE_DATE || '2025-12-31T23:59:59.999Z' }}"
          capture:
            - json: "$.data.id"
              as: "homeworkId"
          expect:
            - statusCode: 201
      
      - think: 2
      
      - get:
          url: "/api/homework/{{ homeworkId }}"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
            - contentType: json
            - hasProperty: data.title

  # Scenario 3: Student completes homework and views feedback
  - name: "Student homework submission workflow"
    weight: 35
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "{{ $processEnvironment.TEST_STUDENT_EMAIL || 'test-student@example.com' }}"
            password: "{{ $processEnvironment.TEST_STUDENT_PASSWORD || 'password123' }}"
          capture:
            - json: "$.data.token"
              as: "authToken"
          expect:
            - statusCode: 200
      
      - get:
          url: "/api/homework/assigned"
          headers:
            Authorization: "Bearer {{ authToken }}"
          capture:
            - json: "$.data[0].id"
              as: "homeworkId"
              strict: false
            - json: "$.data[0].content.questions[0].id"
              as: "questionId1"
              strict: false
            - json: "$.data[0].content.questions[1].id"
              as: "questionId2"
              strict: false
          expect:
            - statusCode: 200
      
      - think: 5
      
      # Simulate file upload for audio answer
      - post:
          url: "/api/files/mock-upload"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            type: "audio"
            purpose: "homework_submission"
          capture:
            - json: "$.data.fileId"
              as: "audioFileId"
          expect:
            - statusCode: 200
      
      - think: 10
      
      - post:
          url: "/api/homework/{{ homeworkId }}/submit"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            answers:
              - questionId: "{{ questionId1 }}"
                type: "audio"
                content: "{{ audioFileId }}"
              - questionId: "{{ questionId2 }}"
                type: "text"
                content: "This is my homework submission for the day. I practiced speaking and writing."
          capture:
            - json: "$.data.id"
              as: "submissionId"
          expect:
            - statusCode: 201
      
      - think: 3
      
      - get:
          url: "/api/homework/submissions/{{ submissionId }}"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
      
      - think: 60
      
      - get:
          url: "/api/feedback/received"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
      
      - get:
          url: "/api/progress"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200

  # Scenario 4: Planner reviews submissions and provides feedback
  - name: "Planner feedback workflow"
    weight: 20
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "{{ $processEnvironment.TEST_PLANNER_EMAIL || 'test-planner@example.com' }}"
            password: "{{ $processEnvironment.TEST_PLANNER_PASSWORD || 'password123' }}"
          capture:
            - json: "$.data.token"
              as: "authToken"
          expect:
            - statusCode: 200
      
      - get:
          url: "/api/homework/submissions/pending"
          headers:
            Authorization: "Bearer {{ authToken }}"
          capture:
            - json: "$.data[0].id"
              as: "submissionId"
              strict: false
            - json: "$.data[0].studentId"
              as: "studentId"
              strict: false
          expect:
            - statusCode: 200
      
      - think: 3
      
      - post:
          url: "/api/homework/submissions/{{ submissionId }}/evaluate"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
      
      - think: 10
      
      - post:
          url: "/api/feedback"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            submissionId: "{{ submissionId }}"
            content: "Good job on your homework! Here are some points to improve..."
            rating: 4
            improvementAreas: ["Work on pronunciation", "Use more varied vocabulary"]
            strengths: ["Good sentence structure", "Clear communication"]
          capture:
            - json: "$.data.id"
              as: "feedbackId"
          expect:
            - statusCode: 201
      
      - think: 2
      
      - get:
          url: "/api/feedback/{{ feedbackId }}"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200

  # Scenario 5: Planner generates reports
  - name: "Planner reporting workflow"
    weight: 10
    flow:
      - post:
          url: "/api/auth/login"
          json:
            email: "{{ $processEnvironment.TEST_PLANNER_EMAIL || 'test-planner@example.com' }}"
            password: "{{ $processEnvironment.TEST_PLANNER_PASSWORD || 'password123' }}"
          capture:
            - json: "$.data.token"
              as: "authToken"
          expect:
            - statusCode: 200
      
      - get:
          url: "/api/students"
          headers:
            Authorization: "Bearer {{ authToken }}"
          capture:
            - json: "$.data[0].id"
              as: "studentId"
              strict: false
          expect:
            - statusCode: 200
      
      - think: 3
      
      - post:
          url: "/api/reporting/generate"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            studentId: "{{ studentId }}"
            period: "monthly"
            includeDetails: true
          expect:
            - statusCode: 200
      
      - think: 5
      
      - get:
          url: "/api/reporting/trends?period=weekly"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
      
      - get:
          url: "/api/reporting/trends?period=monthly"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200